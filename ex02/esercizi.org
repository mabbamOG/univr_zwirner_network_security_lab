# ascii art generated with http://asciiflow.com/
* esercitazione 02
** es 1.a
bisogna impedire che le altre sottoreti
possano connettersi al nostro firewall
(tramite ssh. a lezione abbiamo pero' bloccato tutto)
#+BEGIN_SRC ditaa :file 1a.png
                                       +--------+
                                       |        |
                               +-----------------------+ ATTACKER
                               |       |        |
                               |       |        |
 +---------+               172.x.x.x   +--------+
 | firewall|                   |
 |         |                   |
 |         <----XXXXXXXXX------+
 |         |                   |
 +-----^---+                   |
       |                +----------+
       |                |      |   |
192.168.n.0/24          |      |   |
                        |      |   |
                        |      |   |
                        |      |   |
                        +----------+
                               |
                          ATTACKER
                               +
#+END_SRC
[[file:1a.png]]

** es 1.b
bisogna permettere che il traffico possa
attraversare il firewall.
ma noon vogliamo che qualcuno utilizzi
il nostro firewall per fare forwarding
(come gateway) a target di altri attacchi!
#+BEGIN_SRC ditaa :file 1b.png
    |
+-----------+
|   |       |
|   |       |
|   |       |
|   |       |        +----------+
+-----------+        | ATTACKER |
    |         +----------+ +-----------+
    |     ^   |      | (or in   |
    |     |   |      | subnet)  |
    |     |   |      +----------+
    |     |   |
    |     |   |
172.x.x.x |   |
    |     |   |
    |     X   |
    |     X   |
    |     X   |
    |   ^ X   |        +-------------+
    |   | XXXXXXXXX--> | e.g. TARGET |
    |   | X   |        |             |
    |   | X   |        |             |
+---------X-+ |        |             |
|   |   | XXXXX        +-------------+
|   |   |   |
|   |   |   |
|firewall   |
+---+---+---+
    |   |
    v   +
192.168.n.0/24
#+END_SRC
[[file:1b.png]]

** es2
a simple way to prevent arp poisoning
would be to detect a trivial mitm w/ stupid forwarding.
this does not prevent/detect the attack, but it is a mitigation
for an ongoing one.
#+BEGIN_SRC ditaa :file 2.png
                              +--------------+            +-------+
                              |              |  172.x.x.x |       |
                      +-----> |  FIREWALL    |  <-----XXXXXXXXX   |
                      |       |              |            |   X   |
                      |       +--------------+            +---X---+
                      |                                       X
                      |                                       |
                      +                                       +

+---------------------------------------+   +---------------------------------------+
|              |GOOD PACKET|            |   |              |BAD PACKET|             |
+---------+---------------+-------------+   +---------+-----------------------------+
|  |SRC|  |  TARGET MAC   | TARGET IP   |   |  |SRC|  |  ATTACKER MAC | TARGET IP   |
+---------------------------------------+   +---------------------------------------+
|  |DST|  |  FIREWALL MAC | FIREWALL IP |   |  |DST|  |  FIREWALL MAC | FIREWALL IP |
+---------+---------------+-------------+   +---------+---------------+-------------+

                   TARGET                                  ATTACKER
                (192.168.n.1)
                                                               ^
                      +           BROADCAST CONNECTION         |
                      |           (e.g. WiFi or Ethernet)      |
                      +---------XXXXXXXXXXXXXXXXXXXXXXXX-------+


                       +--------------------------------------------+
                       |                 |BAD PACKET|               |
                       +------------+-------------------------------+
                       |   |SRC|    |  TARGET MAC   |   TARGET IP   |
                       +--------------------------------------------+
                       |   |DST|    |  ATACKER MAC  |  FIREWALL IP  |
                       +------------+---------------+---------------+
#+END_SRC
[[file:2.png]]

*** The attacker is expected to:
1. arp-message target (broadcast?), which is nearby but on another subnet.
   his ip is the same as target's firewall, but the mac is his own
2. receive all of target's packets (these packets no longer traverse the 2
   subnets, as they are sent over-the-air directly at Layer2)
3. forward target's packets to target's original firewall
   (only transport addresses are modified. look at ditaa graph above)
*** The defense:
1. check if the L2 src addr is the same as expected src ip host's
   mac address (it is known since it belongs to the subnet)

- NOTE! :: if the attacker spoofs his own mac address, then this mitigation is insufficient

** es 3
ritorniamo all'esercizio 1.a, abbiamo PERMESSO accesso diretto al nostro
firewall SOLO ai nostri host conosciuti.
MA se la policy e' `INPUT -P DROP`, `OUTPUT -P DROP`
allora bisogna permettere anche al firewall di rispondere al traffico che arriva in
input diretto. bisogna identificare univocamente la connessione con host.

#+BEGIN_SRC ditaa
                +-----------+       172.x.x.x
                |FIREWALL   |
                |           <---XXXXX--->
                |           |
                +----^---+--+ <--XXXXX
                     |   |           |
(init/reply after init)  |(reply)  (reply wihout init
                     |   |         not really primary
                     +   v         issue)
               192.168.n.0/24  +-----+

#+END_SRC
[[file:3.png]]

- NOTA :: aggiungere 2 regole --state NEW/ESTABLISHED in INPUT permette di
  modularizzare il firewall e separare semanticamente cosa accetto per la
  prima volta da cosa accetto una volta che e' partita la connessione!

- NOTA :: accettare anche gli stati con connessione related permette di
  adattarsi a protocolli che usano magari piu' connessioni in maniera non
  cosi' scontata ed evidenziata delle nostre banali regole
  (da accettare solo in OUPUT o anche INPUT? sicuramente avere RELATED solo
  in OUTPUT e' piu' restrittivo e copre casi un po' piu' comuni per es.
  risposte ICMP o cose varie che cmq vengono dal server)
